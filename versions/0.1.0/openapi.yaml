openapi: 3.0.3
info:
  title: nomodo.io - OpenAPI 3.0
  description: |-
    This is Nomodo API based on the OpenAPI 3.0 specification.
    
  contact:
    email: josef@nomodo.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
  
servers:
  - url: https://api.nomodo.io

tags:
  - name: apptypes
    description: Everything about types of apps.
  - name: apps
    description: Everything about apps.
  - name: billing
    description: Everything about inovices and billing.

paths:
  /apptypes:
    get:
      tags: 
        - apptypes
      summary: Get all application types.
      description: Returns all provided types of application.
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppType'
      security:
        - Authorization: []
  /apptypes/{id}:
    get:
      tags: 
        - apptypes
      summary: Get app type by ID.
      description: Returns only one type by ID.
      parameters:
        - name: id
          in: path
          description: id of app type
          required: true
          schema:
            type: string
            example: grav
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/AppType'
      security:
        - Authorization: []
  /apps:
    get:
      tags:
        - apps
      summary: Get all created apps
      description: Returns all created apps with basic info about. 
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/AllApps'
      security:
        - Authorization: []
    post:
      tags:
        - apps
      summary: Create new app.
      description: By req spec create new instance of app.
      requestBody:
        description: Spec of created app.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAppRequest"
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
      security:
        - Authorization: []
  /apps/{customerId}:
    get:
      tags:
        - apps
      summary: Get all apps by customer
      description: Returns all apps by customer ID.
      parameters:
        - name: customerId
          in: path
          description: customer id
          required: true
          schema:
            type: string
            example: 11112-sd-222-sddd
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerApp'
        '404':
          description: customer not found
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  customerId:
                    type: string
  /apps/{appId}:
    get:
      tags:
        - apps
      summary: Get app info
      description: Returns detail info about app by app ID.
      parameters:
        - name: appId
          in: path
          description: app id
          required: true
          schema:
            type: string
            example: 11112-sd-222-sddd
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
        '404':
          description: app not found
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  appId:
                    type: string
    put:
      tags:
        - apps
      summary: Update app info
      description: Update info by app ID.
      requestBody:
        description: Spec of created app.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/App"
      parameters:
        - name: appId
          in: path
          description: app id
          required: true
          schema:
            type: string
            example: 11112-sd-222-sddd
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                description: new saved app info
                type: array
                items:
                  $ref: '#/components/schemas/App'
        '404':
          description: app not found
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  appId:
                    type: string
    delete:
      tags:
        - apps
      summary: Delete app
      description: Delete one app by app ID.
      parameters:
        - name: appId
          in: path
          description: app id
          required: true
          schema:
            type: string
            example: 11112-sd-222-sddd
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '404':
          description: app not found
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
  /billing:
    post:
      tags:
        - billing
      summary: Billing report.
      description: Create an invoicing overview for the required period.
      requestBody:
        description: Specification of billing overview.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingRequest'
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingResponse'
      security:
        - Authorization: []
  /billing/{customerId}:
    post:
      tags:
        - billing
      summary: Get billing report by customer.
      description: Create invoicing overview for the required customer and required perifod.
      parameters:
        - name: customerId
          in: path
          description: id customer
          required: true
          schema:
            type: string
            example: 11112-sd-222-sddd
      requestBody:
        description: Specification of billing overview.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingRequest'
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingByCustomerResponse'
        '404':
          description: customer not found
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  customerId:
                    type: string

components:
  schemas:
    BillingAppDetail:
      type: object
      properties:
        appId:
          type: string
          example: asss-ddd-wwwwww-ddddd
          description: ID of app/instance
        appType:
          type: string
          example: grav
          description: ID of application type
        price:
          type: number
          format: float
          example: 20.10
        currency:
          type: string
          enum:
            - czk
            - usd
            - eur
          example: usd
    BillingByCustomerResponse:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        apps:
          type: array
          items:
            $ref: '#/components/schemas/BillingAppDetail'
        total:
          type: number
          format: float
          example: 234.40
          description: sum of all apps
    BillingResponse:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        customer:
          type: object
          properties:
            id:
              type: string
              description: ID of customers
            apps:
              type: array
              items:
                $ref: "#/components/schemas/BillingAppDetail"
            total:
              type: number
              format: float
              example: 234.40
              description: sum of all apps
        total:
          type: number
          format: float
          example: 234.40
          description: sum of all apps of all customers
    BillingRequest:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        customerId:
          type: string
          description: ID of customer
      required:
        - from
        - to
    AppType:
      type: object
      properties:
        id:
          type: string
          example: grav
        name:
          type: string
          example: Grav CMS
    versions:
          type: array
          items:
            type: string
          example: ["1.0.1", "1.3.4"]
    App:
      type: object
      properties:
        customerId:
          type: string
          description: ID of owner/customer
        appId:
          type: string
          example: zaseeed13ss
        createdAt:
          type: string
          format: date-time
        type:
          type: string
          description: type ID
          example: grav
        state:
          type: string
          description: Application state
          enum:
            - running
            - stopped
            - paused
            - destroyed
        price:
          type: number
          format: float
          description: price of app
          example: 10.90
        currency:
          type: string
          enum:
            - czk
            - usd
            - eur
          example: usd
    CustomerApp:
      type: object
      properties:
        appId:
          type: string
          example: zaseeed13ss
        createdAt:
          type: string
          format: date-time
        type:
          type: string
          description: type ID
          example: grav
        state:
          type: string
          description: Application state
          enum:
            - running
            - stopped
            - paused
            - destroyed
        price:
          type: number
          format: float
          description: price of app
          example: 10.90
        currency:
          type: string
          enum:
            - czk
            - usd
            - eur
          example: usd
    AllApps:
      type: array
      items:
        $ref: "#/components/schemas/App"
    CreateAppRequest:
      type: object
      properties:
        typeId:
          type: string
          description: id of app type
          example: grav
        version:
          description: version of app
          type: string
          example: 1.2.3
        customerId:
          type: string
          description: owner ID
          example: 1223-33ddd3-dsadas-dasds
    WordPress:
      type: object
      properties:
        url:
          type: string
          description: url of wordpress app
          example: https://pepa.nomodo.app
        phpmyadminurl:
          type: string
          description: url of db web client (PHPMyAdmin)
          example: https://pepa-pma.nomodo.app
        dbuser:
          type: string
          description: db user name
          example: root
        dbpassword:
          type: string
          description: password for db user
          example: ss12ssdx#wwwAs
        dbname:
          type: string
          description: db name for wordpess app
          example: wordpress
  securitySchemes:
    Authorization:
      type: apiKey
      name: Authorization
      in: header

