{
  "openapi": "3.0.3",
  "info": {
    "title": "nomodo.io - OpenAPI 3.0",
    "description": "This is Nomodo API based on the OpenAPI 3.0 specification.",
    "contact": {
      "email": "josef@nomodo.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.nomodo.io"
    }
  ],
  "tags": [
    {
      "name": "apptypes",
      "description": "Everything about types of apps."
    },
    {
      "name": "apps",
      "description": "Everything about apps."
    },
    {
      "name": "billing",
      "description": "Everything about inovices and billing."
    },
    {
      "name": "support",
      "description": "Issues management."
    },
    {
      "name": "jobs",
      "description": "Jobs management"
    },
    {
      "name": "priceplans",
      "description": "Prices for apps"
    }
  ],
  "paths": {
    "/apptypes": {
      "get": {
        "tags": [
          "apptypes"
        ],
        "summary": "Gets all application types.",
        "description": "Returns all provided types of application.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppType"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/apptypes/{id}": {
      "get": {
        "tags": [
          "apptypes"
        ],
        "summary": "Gets app type by ID.",
        "description": "Returns only one type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of app type",
            "required": true,
            "schema": {
              "type": "string",
              "example": "grav"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppType"
                }
              }
            }
          },
          "404": {
            "description": "app type not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/priceplans": {
      "get": {
        "tags": [
          "priceplans"
        ],
        "summary": "Gets pricing info.",
        "description": "Returns all pricing plans.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricePlans"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/priceplans/{planId}": {
      "get": {
        "tags": [
          "priceplans"
        ],
        "summary": "Get detail of pricing plan by plan ID.",
        "description": "Returns one doc with price plan.",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "description": "id of price plan",
            "required": true,
            "schema": {
              "type": "string",
              "example": "f1487716-3848-4d7f-abad-2fdfdf3e6a83"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricePlan"
                }
              }
            }
          },
          "404": {
            "description": "price plan not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "planId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/priceplans/apptype/{appTypeId}": {
      "get": {
        "tags": [
          "priceplans"
        ],
        "summary": "Get all price plans by selected appTypeID.",
        "description": "Returns all price plans by specific app type.",
        "parameters": [
          {
            "name": "appTypeId",
            "in": "path",
            "description": "id of app type",
            "required": true,
            "schema": {
              "type": "string",
              "example": "grav"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricePlans"
                }
              }
            }
          },
          "404": {
            "description": "app type not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "appTypeId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/apps": {
      "get": {
        "tags": [
          "apps"
        ],
        "summary": "Gets all created apps",
        "description": "Returns all created apps with basic info about.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllApps"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "apps"
        ],
        "summary": "Create new app.",
        "description": "By req spec create new instance of app.",
        "requestBody": {
          "description": "Spec of created app.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/apps/async": {
      "post": {
        "tags": [
          "apps"
        ],
        "summary": "Create new app async way.",
        "description": "Start async app creation process.",
        "requestBody": {
          "description": "Spec of created app.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppAsyncRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAsync"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/apps/async/{jobId}": {
      "get": {
        "tags": [
          "apps"
        ],
        "summary": "Gets job status.",
        "description": "Returns status of creating new app.",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId returned by POST /apps/async",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dedc966c-b270-4fcd-87bd-b2aa76861498"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobStatusTS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "job not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/apps/{customerId}": {
      "get": {
        "tags": [
          "apps"
        ],
        "summary": "Get all apps by customer",
        "description": "Returns all apps by customer ID.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customer id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "11112-sd-222-sddd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerApp"
                  }
                }
              }
            }
          },
          "404": {
            "description": "customer not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/apps/{appId}": {
      "get": {
        "tags": [
          "apps"
        ],
        "summary": "Gets app info",
        "description": "Returns detail info about app by app ID.",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "app id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "11112-sd-222-sddd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/App"
                  }
                }
              }
            }
          },
          "404": {
            "description": "app not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "appId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "apps"
        ],
        "summary": "Update app info",
        "description": "Update info by app ID.",
        "requestBody": {
          "description": "Spec of created app.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "app id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0ad71399-6764-488f-88dc-20ec3505c1bd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "description": "new saved app info",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/App"
                  }
                }
              }
            }
          },
          "404": {
            "description": "app not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "appId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "apps"
        ],
        "summary": "Delete app",
        "description": "Delete one app by app ID.",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "app id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0ad71399-6764-488f-88dc-20ec3505c1bd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "app not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/apps/{appId}/{action}": {
      "post": {
        "tags": [
          "apps"
        ],
        "summary": "App actions.",
        "description": "Call cpecific action on app. Change app state.",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "id of app",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d9c6a3eb-f0d7-4f20-83f3-1ba2451892a6"
            }
          },
          {
            "name": "action",
            "in": "path",
            "description": "action name",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "start",
                "stop",
                "restart",
                "drop"
              ],
              "example": "stop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful action",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActtionResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request (invalid acton)",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "example": "drum"
                    },
                    "appId": {
                      "type": "string",
                      "example": "d9c6a3eb-f0d7-4f20-83f3-1ba2451892a6"
                    },
                    "error": {
                      "type": "string",
                      "example": "INVALID_ACTION"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "appId NOT_FOUND",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "example": "stop"
                    },
                    "appId": {
                      "type": "string",
                      "example": "11233"
                    },
                    "error": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Gets all runnig jobs.",
        "description": "View of running tasks.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllJobs"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Gets info about job  by jobId.",
        "description": "Gets detailed information by ID.",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId returned by POST /apps/async",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dedc966c-b270-4fcd-87bd-b2aa76861498"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusTS"
                }
              }
            }
          },
          "404": {
            "description": "job not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "jobs"
        ],
        "summary": "Drops job.",
        "description": "Drops created job by jobId.",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId returned by POST /apps/async",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dedc966c-b270-4fcd-87bd-b2aa76861498"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "description": "dropped job id",
                      "example": "dedc966c-b270-4fcd-87bd-b2aa76861498"
                    },
                    "appId": {
                      "type": "string",
                      "description": "app ID created by jobId",
                      "example": "43d63863-fe32-43f3-a649-5c047edfa9d8"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "job not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "description": "jobId from DELETE request",
                      "example": "dedc966c-b270-4fcd-87bd-b2aa76861498"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/support": {
      "post": {
        "tags": [
          "support"
        ],
        "summary": "Create new issue.",
        "description": "Create new task in nomodo support dashboard.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "IssueID": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid api key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/billing": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Billing report.",
        "description": "Create an invoicing overview for the required period.",
        "requestBody": {
          "description": "Specification of billing overview.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/billing/{customerId}": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Gets billing report by customer.",
        "description": "Create invoicing overview for the required customer and required perifod.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "id customer",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0ad71399-6764-488f-88dc-20ec3505c1bd"
            }
          }
        ],
        "requestBody": {
          "description": "Specification of billing overview.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingByCustomerResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "customer not found",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BillingAppDetail": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "example": "asss-ddd-wwwwww-ddddd",
            "description": "ID of app/instance"
          },
          "appType": {
            "type": "string",
            "example": "grav",
            "description": "ID of application type"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 20.1
          },
          "currency": {
            "type": "string",
            "enum": [
              "czk",
              "usd",
              "eur"
            ],
            "example": "usd"
          }
        }
      },
      "BillingByCustomerResponse": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "apps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingAppDetail"
            }
          },
          "total": {
            "type": "number",
            "format": "float",
            "example": 234.4,
            "description": "sum of all apps"
          }
        }
      },
      "BillingResponse": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of customers"
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillingAppDetail"
                }
              },
              "total": {
                "type": "number",
                "format": "float",
                "example": 234.4,
                "description": "sum of all apps"
              }
            }
          },
          "total": {
            "type": "number",
            "format": "float",
            "example": 234.4,
            "description": "sum of all apps of all customers"
          }
        }
      },
      "BillingRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string",
            "description": "ID of customer"
          }
        },
        "required": [
          "from",
          "to"
        ]
      },
      "AppType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "grav"
          },
          "name": {
            "type": "string",
            "example": "Grav CMS"
          },
          "versions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "1.0.1",
              "1.3.4"
            ]
          }
        }
      },
      "AppAsync": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "uuid of new create job",
            "example": "735835b7-89a9-4c45-be88-f3fd2248d1c9"
          },
          "appId": {
            "type": "string",
            "description": "id of new created app",
            "example": "c10dfb47-e62d-4b88-9bcb-5f14c6b3fa57"
          },
          "appType": {
            "type": "string",
            "description": "type od new app",
            "example": "grav"
          },
          "appVersion": {
            "type": "string",
            "description": "version of new app",
            "example": "1.2.3"
          }
        }
      },
      "App": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "ID of owner/customer"
          },
          "appId": {
            "type": "string",
            "example": "zaseeed13ss"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "appType": {
            "type": "string",
            "description": "type ID",
            "example": "grav"
          },
          "state": {
            "type": "string",
            "description": "Application state",
            "enum": [
              "running",
              "stopped",
              "paused",
              "destroyed"
            ]
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "price of app",
            "example": 10.9
          },
          "currency": {
            "type": "string",
            "enum": [
              "czk",
              "usd",
              "eur"
            ],
            "example": "usd"
          }
        }
      },
      "CustomerApp": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "example": "zaseeed13ss"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "appType": {
            "type": "string",
            "description": "type ID",
            "example": "grav"
          },
          "state": {
            "type": "string",
            "description": "Application state",
            "enum": [
              "running",
              "stopped",
              "paused",
              "destroyed"
            ]
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "price of app",
            "example": 10.9
          },
          "currency": {
            "type": "string",
            "enum": [
              "czk",
              "usd",
              "eur"
            ],
            "example": "usd"
          }
        }
      },
      "AllApps": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/App"
        }
      },
      "CreateAppRequest": {
        "type": "object",
        "properties": {
          "typeId": {
            "type": "string",
            "description": "id of app type",
            "example": "grav"
          },
          "version": {
            "description": "version of app",
            "type": "string",
            "example": "1.2.3"
          },
          "customerId": {
            "type": "string",
            "description": "owner ID",
            "example": "1223-33ddd3-dsadas-dasds"
          },
          "pricePlanId": {
            "type": "string",
            "description": "id of price plan",
            "example": "f1487716-3848-4d7f-abad-2fdfdf3e6a83"
          }
        }
      },
      "CreateAppAsyncRequest": {
        "type": "object",
        "properties": {
          "typeId": {
            "type": "string",
            "description": "id of app type",
            "example": "grav"
          },
          "version": {
            "description": "version of app",
            "type": "string",
            "example": "1.2.3"
          },
          "customerId": {
            "type": "string",
            "description": "owner ID",
            "example": "a10f9bab-24c1-47a0-a6ff-1b24270f19b9"
          },
          "pricePlanId": {
            "type": "string",
            "description": "id of price plan",
            "example": "f1487716-3848-4d7f-abad-2fdfdf3e6a83"
          },
          "callback": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "http method of callback",
                "example": "POST"
              },
              "url": {
                "type": "string",
                "description": "url of callback",
                "example": "https://api.example.com/callback/222c66ff-ed51-4e0c-8c6c-348fbb17d61a"
              },
              "auth": {
                "type": "object",
                "properties": {
                  "headername": {
                    "type": "string",
                    "description": "name of header for authorization. if will be empty will not used.",
                    "example": "Authorization"
                  },
                  "token": {
                    "type": "string",
                    "description": "authorization token",
                    "example": "dsa3edsads12sdafsfsqwe12df"
                  }
                }
              }
            }
          }
        }
      },
      "PricePlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique if of price plan",
            "example": "f1487716-3848-4d7f-abad-2fdfdf3e6a83"
          },
          "appType": {
            "type": "string",
            "description": "app type id",
            "example": "grav"
          },
          "name": {
            "type": "string",
            "description": "name of price plan",
            "example": "WordPress Basic"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 20.1
          },
          "currency": {
            "type": "string",
            "enum": [
              "czk",
              "usd",
              "eur"
            ],
            "example": "usd"
          }
        }
      },
      "PricePlans": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PricePlan"
        }
      },
      "MedusaJS": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "MedusaJS URL",
            "example": "https://medusajs-1.nomodo.io"
          },
          "user": {
            "type": "string",
            "description": "admin user name for MedusaJS",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "description": "user password",
            "example": "dasoie22l##dasd"
          }
        }
      },
      "MediaWiki": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "new MediaWiki app url",
            "example": "https://mediawiki-1.nomodo.io"
          },
          "db": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "type of mediawiki db",
                "example": "MariaDB"
              },
              "host": {
                "type": "string",
                "description": "ip or host of mediawiki db",
                "example": "12.33.22.11:12234"
              },
              "name": {
                "type": "string",
                "description": "mediawiki database name",
                "example": "mediawiki-1"
              },
              "user": {
                "type": "string",
                "description": "db user name",
                "example": "root"
              },
              "password": {
                "type": "string",
                "description": "password for db user",
                "example": "dWas12#dfrtff"
              }
            }
          }
        }
      },
      "Grav": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "url of new grav app",
            "example": "https://grav-1.nomodo.io"
          }
        }
      },
      "RabbitMQ": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "ip or hostname of RabbitMQ server",
            "example": "12.233.17.22"
          },
          "port": {
            "type": "number",
            "description": "port of RabbitMQ server",
            "example": 2233
          },
          "user": {
            "type": "string",
            "description": "user name for RabbitMQ",
            "example": "dasdas23DDxls2"
          },
          "password": {
            "type": "string",
            "description": "password for RabbitMQ",
            "example": "dasdas23DDxls2"
          },
          "admin": {
            "type": "string",
            "description": "URL of RabbitMQ web client",
            "example": "https://rabbitmq-1.nomodo.io"
          }
        }
      },
      "PostgreSQL": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "ip or hostname of PostgreSQL server",
            "example": "12.233.17.22"
          },
          "port": {
            "type": "number",
            "description": "port of PostgreSQL server",
            "example": 2233
          },
          "user": {
            "type": "string",
            "description": "user name for PostgreSQL",
            "example": "dasdas23DDxls2"
          },
          "password": {
            "type": "string",
            "description": "password for PostgreSQL",
            "example": "dasdas23DDxls2"
          },
          "admin": {
            "type": "string",
            "description": "URL of PostgreSQL web client",
            "example": "https://postgresql-1.nomodo.io"
          }
        }
      },
      "Elasticsearch": {
        "type": "object",
        "properties": {
          "elastic": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "ip or host of Elasic server",
                "example": "12.233.17.22"
              },
              "port": {
                "type": "number",
                "description": "port of Elastic server",
                "example": 1234
              },
              "user": {
                "type": "string",
                "description": "Elastic server user",
                "example": "root"
              },
              "password": {
                "type": "string",
                "description": "user password for Elastic",
                "example": "dsado233@dsadDqw"
              }
            }
          },
          "kibana": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "Kibana url",
                "example": "https://kibana-1.nomodo.io"
              },
              "user": {
                "type": "string",
                "description": "Kibana user",
                "example": "root"
              },
              "password": {
                "type": "string",
                "description": "user password for Kibana",
                "example": "dsado233@dsadDqw"
              }
            }
          }
        }
      },
      "MySQL": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "ip or hostname of MySQL server",
            "example": "12.233.17.22"
          },
          "port": {
            "type": "number",
            "description": "port of MySQL server",
            "example": 2233
          },
          "user": {
            "type": "string",
            "description": "user name for MySQL",
            "example": "dasdas23DDxls2"
          },
          "password": {
            "type": "string",
            "description": "password for MySQL",
            "example": "dasdas23DDxls2"
          },
          "admin": {
            "type": "string",
            "description": "URL of MySQL web client",
            "example": "https://mysql-1.nomodo.io"
          }
        }
      },
      "MariaDB": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "ip or hostname of MariaDB server",
            "example": "12.233.17.22"
          },
          "port": {
            "type": "number",
            "description": "port of MariaDB server",
            "example": 2233
          },
          "user": {
            "type": "string",
            "description": "user name for MariaDB",
            "example": "dasdas23DDxls2"
          },
          "password": {
            "type": "string",
            "description": "password for MariaDB",
            "example": "dasdas23DDxls2"
          },
          "admin": {
            "type": "string",
            "description": "URL of MariaDB web client",
            "example": "https://mariadb-1.nomodo.io"
          }
        }
      },
      "MongoDB": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "ip or hostname of MongoDB server",
            "example": "12.233.17.22"
          },
          "port": {
            "type": "number",
            "description": "port of MongoDB server",
            "example": 2233
          },
          "user": {
            "type": "string",
            "description": "user name for MongoDB",
            "example": "dasdas23DDxls2"
          },
          "password": {
            "type": "string",
            "description": "password for Redis",
            "example": "dasdas23DDxls2"
          },
          "admin": {
            "type": "string",
            "description": "URL of MongoDB web client",
            "example": "https://mongodb-1.nomodo.io"
          }
        }
      },
      "Redis": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "ip or hostname of Redis server",
            "example": "12.233.17.22"
          },
          "port": {
            "type": "number",
            "description": "port of Redis server",
            "example": 2233
          },
          "password": {
            "type": "string",
            "description": "password for Redis",
            "example": "dasdas23DDxls2"
          },
          "admin": {
            "type": "string",
            "description": "URL of Redis web client",
            "example": "https://redis-1.nomodo.io"
          }
        }
      },
      "WordPress": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "url of wordpress app",
            "example": "https://pepa.nomodo.app"
          },
          "phpMyAdminUrl": {
            "type": "string",
            "description": "url of db web client (PHPMyAdmin)",
            "example": "https://pepa-pma.nomodo.app"
          },
          "dbUser": {
            "type": "string",
            "description": "db user name",
            "example": "root"
          },
          "dbPassword": {
            "type": "string",
            "description": "password for db user",
            "example": "ss12ssdx#wwwAs"
          },
          "dbName": {
            "type": "string",
            "description": "db name for wordpess app",
            "example": "wordpress"
          }
        }
      },
      "ActtionResponse": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "description": "id of app",
            "example": "d9c6a3eb-f0d7-4f20-83f3-1ba2451892a6"
          },
          "action": {
            "type": "string",
            "enum": [
              "start",
              "stop",
              "restart",
              "drop"
            ],
            "description": "action name",
            "example": "stop"
          },
          "status": {
            "type": "string",
            "enum": [
              "started",
              "stopped",
              "restarted",
              "dropped"
            ],
            "description": "new status of application",
            "example": "stopped"
          }
        }
      },
      "JobStatus": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "id of job",
            "example": "dedc966c-b270-4fcd-87bd-b2aa76861498"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "job creation timestamp",
            "example": "2023-07-21T17:32:28Z"
          },
          "appId": {
            "type": "string",
            "description": "id of new app",
            "example": "8c756b5e-eed4-4d12-8550-9708ecd539f5"
          },
          "status": {
            "type": "string",
            "description": "info about job",
            "enum": [
              "accepted",
              "started",
              "runs",
              "done"
            ]
          }
        }
      },
      "JobStatusTS": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "id of job",
            "example": "dedc966c-b270-4fcd-87bd-b2aa76861498"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "job creation timestamp",
            "example": "2023-07-21T17:32:28Z"
          },
          "appId": {
            "type": "string",
            "description": "id of new app",
            "example": "8c756b5e-eed4-4d12-8550-9708ecd539f5"
          },
          "status": {
            "type": "string",
            "description": "info about job",
            "enum": [
              "accepted",
              "started",
              "runs",
              "done"
            ]
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "description": "timestamp of job status info",
            "example": "2023-07-21T17:32:28Z"
          }
        }
      },
      "AllJobs": {
        "type": "object",
        "properties": {
          "ts": {
            "type": "string",
            "format": "date-time",
            "description": "timestamp of job status info",
            "example": "2023-07-21T17:32:28Z"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobStatus"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
